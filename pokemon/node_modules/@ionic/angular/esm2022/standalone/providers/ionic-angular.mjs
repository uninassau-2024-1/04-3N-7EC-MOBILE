import { DOCUMENT } from '@angular/common';
import { APP_INITIALIZER, makeEnvironmentProviders } from '@angular/core';
import { AngularDelegate, ConfigToken, provideComponentInputBinding } from '@ionic/angular/common';
import { initialize } from '@ionic/core/components';
import { ModalController } from './modal-controller';
import { PopoverController } from './popover-controller';
export const provideIonicAngular = (config) => {
    return makeEnvironmentProviders([
        {
            provide: ConfigToken,
            useValue: config,
        },
        {
            provide: APP_INITIALIZER,
            useFactory: initializeIonicAngular,
            multi: true,
            deps: [ConfigToken, DOCUMENT],
        },
        provideComponentInputBinding(),
        AngularDelegate,
        ModalController,
        PopoverController,
    ]);
};
const initializeIonicAngular = (config, doc) => {
    return () => {
        /**
         * By default Ionic Framework hides elements that
         * are not hydrated, but in the CE build there is no
         * hydration.
         * TODO FW-2797: Remove when all integrations have been
         * migrated to CE build.
         */
        doc.documentElement.classList.add('ion-ce');
        initialize(config);
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9uaWMtYW5ndWxhci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3N0YW5kYWxvbmUvc3JjL3Byb3ZpZGVycy9pb25pYy1hbmd1bGFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLHdCQUF3QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbkcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBR3BELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV6RCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLE1BQW9CLEVBQXdCLEVBQUU7SUFDaEYsT0FBTyx3QkFBd0IsQ0FBQztRQUM5QjtZQUNFLE9BQU8sRUFBRSxXQUFXO1lBQ3BCLFFBQVEsRUFBRSxNQUFNO1NBQ2pCO1FBQ0Q7WUFDRSxPQUFPLEVBQUUsZUFBZTtZQUN4QixVQUFVLEVBQUUsc0JBQXNCO1lBQ2xDLEtBQUssRUFBRSxJQUFJO1lBQ1gsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQztTQUM5QjtRQUNELDRCQUE0QixFQUFFO1FBQzlCLGVBQWU7UUFDZixlQUFlO1FBQ2YsaUJBQWlCO0tBQ2xCLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQUVGLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxNQUFtQixFQUFFLEdBQWEsRUFBRSxFQUFFO0lBQ3BFLE9BQU8sR0FBRyxFQUFFO1FBQ1Y7Ozs7OztXQU1HO1FBQ0gsR0FBRyxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRTVDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBET0NVTUVOVCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBBUFBfSU5JVElBTElaRVIsIG1ha2VFbnZpcm9ubWVudFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHR5cGUgeyBFbnZpcm9ubWVudFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQW5ndWxhckRlbGVnYXRlLCBDb25maWdUb2tlbiwgcHJvdmlkZUNvbXBvbmVudElucHV0QmluZGluZyB9IGZyb20gJ0Bpb25pYy9hbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBpbml0aWFsaXplIH0gZnJvbSAnQGlvbmljL2NvcmUvY29tcG9uZW50cyc7XG5pbXBvcnQgdHlwZSB7IElvbmljQ29uZmlnIH0gZnJvbSAnQGlvbmljL2NvcmUvY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IE1vZGFsQ29udHJvbGxlciB9IGZyb20gJy4vbW9kYWwtY29udHJvbGxlcic7XG5pbXBvcnQgeyBQb3BvdmVyQ29udHJvbGxlciB9IGZyb20gJy4vcG9wb3Zlci1jb250cm9sbGVyJztcblxuZXhwb3J0IGNvbnN0IHByb3ZpZGVJb25pY0FuZ3VsYXIgPSAoY29uZmlnPzogSW9uaWNDb25maWcpOiBFbnZpcm9ubWVudFByb3ZpZGVycyA9PiB7XG4gIHJldHVybiBtYWtlRW52aXJvbm1lbnRQcm92aWRlcnMoW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IENvbmZpZ1Rva2VuLFxuICAgICAgdXNlVmFsdWU6IGNvbmZpZyxcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEFQUF9JTklUSUFMSVpFUixcbiAgICAgIHVzZUZhY3Rvcnk6IGluaXRpYWxpemVJb25pY0FuZ3VsYXIsXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgIGRlcHM6IFtDb25maWdUb2tlbiwgRE9DVU1FTlRdLFxuICAgIH0sXG4gICAgcHJvdmlkZUNvbXBvbmVudElucHV0QmluZGluZygpLFxuICAgIEFuZ3VsYXJEZWxlZ2F0ZSxcbiAgICBNb2RhbENvbnRyb2xsZXIsXG4gICAgUG9wb3ZlckNvbnRyb2xsZXIsXG4gIF0pO1xufTtcblxuY29uc3QgaW5pdGlhbGl6ZUlvbmljQW5ndWxhciA9IChjb25maWc6IElvbmljQ29uZmlnLCBkb2M6IERvY3VtZW50KSA9PiB7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgLyoqXG4gICAgICogQnkgZGVmYXVsdCBJb25pYyBGcmFtZXdvcmsgaGlkZXMgZWxlbWVudHMgdGhhdFxuICAgICAqIGFyZSBub3QgaHlkcmF0ZWQsIGJ1dCBpbiB0aGUgQ0UgYnVpbGQgdGhlcmUgaXMgbm9cbiAgICAgKiBoeWRyYXRpb24uXG4gICAgICogVE9ETyBGVy0yNzk3OiBSZW1vdmUgd2hlbiBhbGwgaW50ZWdyYXRpb25zIGhhdmUgYmVlblxuICAgICAqIG1pZ3JhdGVkIHRvIENFIGJ1aWxkLlxuICAgICAqL1xuICAgIGRvYy5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaW9uLWNlJyk7XG5cbiAgICBpbml0aWFsaXplKGNvbmZpZyk7XG4gIH07XG59O1xuIl19